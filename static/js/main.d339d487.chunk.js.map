{"version":3,"sources":["reportWebVitals.js","components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TodoItem","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","TodosList","this","todos","map","React","Component","Header","padding","lineHeight","fontSize","marginBottom","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoItemProps","onSubmit","placeholder","TodoContainer","uuidv4","handleChange","console","log","deleteTodo","filter","addTodoItem","newTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d339d487.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\r\n\r\nconst TodoItem =(props)=> {\r\n    const completedStyle = {\r\n        fontStyle: \"italic\",\r\n        color: \"#d35e0f\",\r\n        opacity: 0.4,\r\n        textDecoration: \"line-through\",\r\n      }\r\n      const { completed, id, title } = props.todo\r\n\r\nreturn  (<li className=\"todo-item\">{<input type=\"checkbox\" checked={completed} \r\nonChange={() => props.handleChangeProps(id)}></input>}\r\n    {<button onClick={()=>props.deleteTodoProps(id)}>\r\n        Delete\r\n    </button>}\r\n\r\n    <span style={completed ? completedStyle : null}>\r\n        {title}\r\n    </span>\r\n</li>)\r\n\r\n};\r\nexport default TodoItem;","// the TodosList component will be accessing the state data and display its todos items.\r\nimport React from \"react\";\r\nimport TodoItem from \"./TodoItem\"\r\n\r\nclass TodosList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.todos.map(todo => (\r\n          <TodoItem \r\n            key={todo.id} \r\n            todo={todo} \r\n            handleChangeProps={this.props.handleChangeProps} \r\n            deleteTodoProps={this.props.deleteTodoProps} \r\n      \r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodosList","import React from \"react\"\r\n\r\nconst Header = () => {\r\n  const headerStyle = {\r\n    padding: \"20px 0\",\r\n    lineHeight: \"2em\",\r\n  }\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1 style={{fontSize:\"25px\", marginBottom:\"15px\"}}>Todo App with React</h1>\r\n      <p style={{ fontSize: \"19px\" }}>Please add to-dos item(s) through the input field</p>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React, {Component} from \"react\"\r\n\r\n// the InputTodo component will carry the responsibility of accepting the user’s input. \r\n// That means we will need a place to store the data (in this case, the store is the state) received through the input. \r\n// From there, we can display the data in the frontend.\r\nclass InputTodo extends Component{\r\n    state={\r\n        title: \"\",\r\n    };\r\n\r\n    onChange = e =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        // burda bir eksiklik olabilir\r\n       this.props.addTodoItemProps(this.state.title);\r\n        this.setState({\r\n          title: \"\"\r\n        });\r\n      };\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n                {/* Since we will be getting data through the user’s \r\n                interaction (i.e through the input field), \r\n                this component will, therefore, hold state. \r\n                For that reason, it will be a class-based component. */}\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"input-text\"\r\n                    placeholder=\" Add Todo...\" \r\n                    value={this.state.title} \r\n                    name=\"title\"\r\n                    onChange={this.onChange}\r\n                />\r\n                <input type=\"submit\" className=\"input-submit\" value=\"Submit\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default InputTodo","import React from \"react\"\r\nimport TodosList from \"./TodosList\"\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\nimport { v4 as uuidv4 } from \"uuid\" \r\n// for every component that will be accessing the state data, \r\n// you will need to declare the state object in the file of their closest common parent. \r\n// For this reason, the state data will live in the TodoContainer component, \r\n// which is their closest common parent.\r\nclass TodoContainer extends React.Component{\r\n\r\n    state = {\r\n        todos: [\r\n          {\r\n            id: uuidv4(),\r\n            title: \"Setup react development environment\",\r\n            completed: true\r\n          },\r\n          {\r\n            id: uuidv4(),\r\n            title: \"Create to-do app with React.js\",\r\n            completed: false\r\n          },\r\n          {\r\n            id: uuidv4(),\r\n            title: \"Share the project on Github\",\r\n            completed: false\r\n          }\r\n        ]\r\n       };\r\n\r\n       handleChange = (id) => {\r\n         this.setState({\r\n           todos:this.state.todos.map(todo=>{\r\n             if(todo.id===id){\r\n               todo.completed=!todo.completed;\r\n             }\r\n             return todo;\r\n           })\r\n         })\r\n        console.log(\"clicked\",id);\r\n      };\r\n\r\n      deleteTodo = id => {\r\n        this.setState({\r\n          todos:[\r\n            ...this.state.todos.filter(todo=>{\r\n              return todo.id !== id;\r\n            })\r\n          ]\r\n        });\r\n        console.log(\"deleted\", id);\r\n      };\r\n\r\n\r\n      addTodoItem = title =>{\r\n       \r\n        const newTodo = {\r\n          id: uuidv4(),\r\n          title: title,\r\n          completed: false\r\n        };\r\n        this.setState({\r\n          todos: [...this.state.todos, newTodo]\r\n        });\r\n        console.log(title);\r\n    \r\n      };\r\n\r\n      \r\n    render(){\r\n        return(\r\n            \r\n            <div className=\"container\">\r\n                <Header />\r\n                <InputTodo addTodoItemProps={this.addTodoItem} />\r\n                <TodosList \r\n                todos={this.state.todos} \r\n                handleChangeProps={this.handleChange} \r\n                deleteTodoProps={this.deleteTodo}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TodoContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport TodoContainer from './components/TodoContainer';\nimport \"./App.css\"\n\nReactDOM.render(<TodoContainer/> ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}